#
#
# datecreated 08-12-04
# FIELDS
# parentid 256 possible parents for Menus
# menuId 65535 possible Menus primary key
# name 128 max characters
# description max 2^16 characters
# position = in what order the menu item will show up
# Created INDEX inorder to make faster searches for the rows with parentId
#
#

DROP TABLE IF EXISTS Menus;
CREATE TABLE Menus (
  parentId tinyint unsigned NOT NULL default '0',	
  name varchar(128) NOT NULL default 'NO M_NAME',
  description text default '',
  position int unsigned  NOT NULL default 0,
  menuId smallint unsigned NOT NULL auto_increment,
  PRIMARY KEY  (menuId),
  INDEX children (parentId)
) TYPE=MyISAM AUTO_INCREMENT=1;

# --------------------------------------------------------
INSERT INTO Menus (parentId,name,description,position,menuId) VALUES (0,'Nigiri Sushi','2pcs per order',0,1);
INSERT INTO Menus (parentId,name,description,position,menuId) VALUES (0,'Roll Sushi','',1,2);
INSERT INTO Menus (parentId,name,description,position,menuId) VALUES (2,'Tempura Roll','',0,3);
INSERT INTO Menus (parentId,name,description,position,menuId) VALUES (2,'Spicy Roll','',0,4);
INSERT INTO Menus (parentId,name,description,position,menuId) VALUES (2,'Veggie Roll','',0,5);
INSERT INTO Menus (parentId,name,description,position,menuId) VALUES (0,'Sashimi','',0,6);
INSERT INTO Menus (parentId,name,description,position,menuId) VALUES (0,'Appetizer','',0,7);
INSERT INTO Menus (menuId,name,position) VALUES (8,'Beverages Sake',0);
# --------------------------------------------------------

##############################################################################################################################
##############################################################################################################################

#
#
# datecreated 08-15-04
# FIELDS
# productId 18446744073709551615 possible positive Products
# menuId 65535 possible
# name 128 maximum characters
# description max 2^16 characters
# price 999999999999999.99 max 0 for price means that the price varies depending on the market
# quantityStat -2147483647 to 2147483647, negative numbers  mean that  quantity does not matter zero means item is not available positive mean item available
# taxId, ( I dont think we need to have a tax Id here, because it will be same for everything, see tax table)
# optionId smallint unsigned NOT NULL default '0', (Dont need the optionId here we got a separate table for this)
# INDEX menuId is for fast searches, It also guaranties that each product
# will be belong to a single menu, if this is not the case a ProductsToMenu
# table has to be created
#
#

DROP TABLE IF EXISTS Products;
CREATE TABLE Products (
  menuId smallint unsigned NOT NULL,
  name varchar(16) NOT NULL default 'NO P_NAME',
  description text default '',
  picsm
  piclg
  price decimal(15,2) NOT NULL,
  quantityStat int NOT NULL default -1,
  productId bigint unsigned NOT NULL auto_increment,
  PRIMARY KEY (productId),
  INDEX  menuSearch (menuId)
) TYPE=MyISAM AUTO_INCREMENT=1;

#Nigiri Sushi Menu
# --------------------------------------------------------
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Maguro','Tuna','4.25',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Maguro Tataki','Seared Tuna','4.25',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Shiro Maguro','Abacore Tuna','3.80',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Chu Toro','Medium Fatty Tuna','0.00',0);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Oh Toro','Fattiest Tuna','0.00',0);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Hamachi','Yellowtail','4.50',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Shake','Salmon','3.90',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Shiromi-Tai','Red Snapper','4.35',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Shiromi-Hiame','Halibut','4.35',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Shiromi-Suzuki','Striped Bass','3.80',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Ebi','Shrimp','3.80',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Amaebi','Sweet Raw Shrimp','4.75',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Saba','Mackerel','3.80',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Aji','SpanishMackerel','4.85',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Kaibashira','Scallops','4.25',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Mirugai','Jumbo Clam','6.50',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Hokki Gai','Surg Clam','3.75',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Kaki','Oyster','4.50',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Awabi','Abalone','6.50',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Tako','Octopus','3.90',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Ika','Squid','3.95',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Anago','Sea Eel','4.40',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Unagi','Freshwater Eel','4.40',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Tamago','Egg Custard','3.50',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Ikura','Salmon Egg','4.75',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Masago','Smelt Egg','3.75',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Tobiko','Flying fish Egg','4.50',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Uni','Sea Urchin','6.25',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Kani','Snow Crab Legs','5.75',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Katsuo','Seared Bonito','4.00',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Smoked Salmon','Smoked Salmon','4.25',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (1,'Uzura','Quail Egg - 2pcs','1.30',-1);

INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (2,'California','California Rolls - 8pcs','4.75',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (2,'Salmon CrCheese','Philadelphia - 8pcs','5.00',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (2,'Tekka Maki','Tuna Roll - 6pcs','4.50',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (2,'Negihama','Yellowtail Roll - 6pcs','4.50',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (2,'Negitoro','Fatty Tuna/Green Onion - 6pcs','0.00',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (2,'Anakyu','Sea Eel Roll - 5pcs','5.00',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (2,'Salmon Skin','Salmon Skin Roll - 5 pcs','4.25',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (2,'Unakyu','Freshwater Eel Roll - 5pcs','5.00',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (2,'Kaibashira','Scallop Roll - 6pcs','4.75',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (2,'Caterpillar Roll','Avocado/Freshwater Eel - 8pcs','8.95',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (2,'Rainbow Roll','7 Dif. Fish - 8pcs','12.95',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (2,'Futomaki','Sea Eel/Egg Custard/Shitake/etc. - 5pcs','5.95',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (2,'Shake Maki','Salmon Roll - 6pcs','4.00',-1);


INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (3,'Ebi','Shrimp Tempura Rolls - 5pcs','6.25',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (3,'Ika','Calamari Tempura - 5pcs','5.75',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (3,'Tori','Chicken Tempura Roll - 5pcs','5.50',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (3,'Kumo (Spider)','Soft Shell Crab - 5pcs','7.25',-1);

INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (4,'Spicy Tuna Roll','Regular - 6pcs','4.50',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (4,'Fancy Tuna Roll','Fancy - 8pcs','5.75',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (4,'Spicy Yellowtail','6pcs','5.50',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (4,'Spicy Scallop','6pcs','4.85',-1);
INSERT INTO Products (menuId,name,description,price,quantityStat) VALUES (4,'Spicy Salmon','6pcs','4.50',-1);


#C 21 Spicy Baked Yellowtail Roll(6pcs) $5.50 
#C 14 Ebi (Shrimp Tempura Rolls - 5pcs) $6.25 
#C 15 Ika (Calamari Tempura - 5pcs) $5.75 
#C 16 Tori (Chicken Tempura Roll - 5pcs) $5.50 
#C 17 Kumo (Spider) (Soft Shell Crab - 5pcs) $7.25

#C 6 Anakyu (Sea Eel Roll - 5pcs) $5.00
#C 7  (Salmon Skin Roll - 5 pcs) $4.25
#C 8 Unakyu (Freshwater Eel Roll - 5pcs) $5.00
#C 10 Caterpillar Roll (Avocado/Freshwater Eel - 8pcs) $8.95
#C 12 Futomaki (Sea Eel/Egg Custard/Shitake/etc. - 5pcs) $5.95
#M 13 Shake Maki (Salmon Roll - 6pcs) $4.00
#
# --------------------------------------------------------


#
#
# options table will have values such as extra fries, extra ginger
# datecreated 08-12-04
# FIELDS
# optionId maximum 65535 options for a particular restaurant
# name max 64 chars
# description max 255 characters
# price for extras
#
#

DROP TABLE IF EXISTS ProductOptions;
CREATE TABLE ProductOptions (
  name varchar(64) NOT NULL default '',
  description tinytext default '',
  price decimal(15,2) NOT NULL,
  optionId smallint unsigned NOT NULL auto_increment,
  PRIMARY KEY  (optionId)
) TYPE=MyISAM AUTO_INCREMENT=1; 

# --------------------------------------------------------
INSERT INTO ProductOptions (description,name,price) VALUES ('Cooked','C','0');
INSERT INTO ProductOptions (description,name,price) VALUES ('Marinated','M','0');
INSERT INTO ProductOptions (description,name,price) VALUES ('Seared','S','0');
INSERT INTO ProductOptions (description,name,price) VALUES ('Vegetables','V','0');
# --------------------------------------------------------


#
#
# Below table is created for the possibility of having multiple
# options per product, otherwise optionId would have put in the
# Products table or productId would have been put into the ProductOptions table
# datecreated 08-12-04
# FIELDS
# productId 1,677,215 possible Products
# optionId
#
#

DROP TABLE IF EXISTS ProductsToOptions;
CREATE TABLE ProductsToOptions (
  productId bigint unsigned NOT NULL,
  optionId smallint unsigned NOT NULL,
  PRIMARY KEY (productId,optionId)
) TYPE=MyISAM;

# --------------------------------------------------------
INSERT INTO ProductsToOptions (productId,optionId) VALUES (2,3);
INSERT INTO ProductsToOptions (productId,optionId) VALUES (3,3);
INSERT INTO ProductsToOptions (productId,optionId) VALUES (7,2);
INSERT INTO ProductsToOptions (productId,optionId) VALUES (11,1);
INSERT INTO ProductsToOptions (productId,optionId) VALUES (13,2);
INSERT INTO ProductsToOptions (productId,optionId) VALUES (17,1);
INSERT INTO ProductsToOptions (productId,optionId) VALUES (20,1);
INSERT INTO ProductsToOptions (productId,optionId) VALUES (22,1);
INSERT INTO ProductsToOptions (productId,optionId) VALUES (23,1);
INSERT INTO ProductsToOptions (productId,optionId) VALUES (24,1);
INSERT INTO ProductsToOptions (productId,optionId) VALUES (29,1);
INSERT INTO ProductsToOptions (productId,optionId) VALUES (31,1);
# --------------------------------------------------------


##############################################################################################################################
##############################################################################################################################

#
#
# Tax table
# datecreated 08-15-04
# FIELDS
# TaxId 256 positive possible types of Tax
# taxZone 128 possible characters for the taxZone = storeId smallint unsigned NOT NULL
# description 255 possible chars for the description
# 
#

DROP TABLE IF EXISTS Tax;
CREATE TABLE Tax (
  storeId smallint unsigned NOT NULL,
  taxZone varchar(128),
  rate decimal(3,2) NOT NULL,
  description tinytext,
  INDEX findStore(storeId)
) TYPE=MyISAM;

# --------------------------------------------------------
INSERT INTO Tax (storeId,taxZone,rate,description) VALUES (1,'Denver',7.7,'Total tax rate for Denver Restaurants');
# --------------------------------------------------------


##############################################################################################################################
##############################################################################################################################


#
#
# Orders table
# datecreated 08-26-04 ++ modified 10-17-04
# FIELDS
# orderId maximum 4294967295 Orders per period (daily/monthly/yearly) of order information
# tableNo 0 means there is no table
# numberOfGuests 0 means 
# userId max 256 different users/servers per store  ########### This field might need to be indexed depending on explain test results#############
# paymentMethodId max 256 payment Methods
# orderDate DATETIME format is in 2004-08-17 15:48:34
# orderDeliveryDate DATETIME format is in 2004-08-17 15:48:34 || if this id is 0 that means this order belongs to the local orders not ecomm orders  
# INDEX dateIndex will be used to get Orders between dateStart and dateEnd
#
#

DROP TABLE IF EXISTS Orders;
CREATE TABLE Orders (
  userId smallint unsigned NOT NULL,
  storeId smallint unsigned NOT NULL,
  deliveryMethId smallint unsigned NOT NULL,
  orderDate datetime NOT NULL,
  orderDeliveryDate datetime NOT NULL,
  subTotal decimal (15,2) NOT NULL,
  taxAmount decimal (7,2) NOT NULL,
  total decimal (15,2) NOT NULL,
  orderId int unsigned NOT NULL auto_increment,
  PRIMARY KEY (orderId),
  INDEX dateIndex(orderDeliveryDate)
) TYPE=MyISAM AUTO_INCREMENT=1;

#-----------------------------------
INSERT INTO Orders (orderId,paymentMethodId,userId,orderDate) VALUES (1,1,1,now());
#-----------------------------------

#
#
# OrderToProducts table can also be considered OrderToProducts
# datecreated 08-17-04 datemodified 09-01-04
# modified this table to be able to use it as shopping cart. I still need to think about it in performance terms
# because carts are generally handled using cookies, sessions and such I checked the oscomm code to get some ideas on this. 
# They used a similar way of managing their shopping cart
# So I am not totally out of touch with reality here... cool  09-01-04
# FIELDS
# orderId can be considered as basketId maximum 4,294,967,295 Orders per period (daily/monthly/yearly) of order information
# productId maximum 18446744073709551615 possible Products
# productQuantity maximum 4.294.967.295 same product sale per order
#
#

DROP TABLE IF EXISTS OrderToProds;
CREATE TABLE OrderToProds (
  orderId int unsigned NOT NULL ,
  productId  bigint unsigned NOT NULL, 
  productQuantity int unsigned NOT NULL default 1 ,
  INDEX findOrders(orderId),
  INDEX findProducts (productId)
) TYPE=MYISAM;

#INSERT INTO OrderToProds (orderId,productId,productQuantity) VALUES (1,1,1);

##############################################################################################################################
##############################################################################################################################


#
#
# OrderDeliveryMethods table
# datecreated 10-11-2004
# FIELDS
# deliveryMethodId 65535 maximum payment delivery methods 
# name 255 max characters Name of the server
# discountAmount 0 means that the discount will be determined depending on the situation
# discountPercentage 0 means that the discount will be determined depending on the situation
#
#
                                                                                                                                                     
DROP TABLE IF EXISTS OrderDeliveryMethods;
CREATE TABLE OrderDeliveryMethods (
  name varchar(64) NOT NULL default 'No Name Specified',
  description tinytext NOT NULL default '',
  deliveryCost decimal(8,2) NOT NULL default 0,
  status bool default 1,
  deliveryMethId smallint unsigned NOT NULL auto_increment,
  PRIMARY KEY (deliveryMethId),
  INDEX findByStat (status)
) TYPE=MyISAM AUTO_INCREMENT=1;

INSERT INTO OrderDeliveryMethods (name,description,deliveryCost,status,deliveryMethId) VALUES ('Store Pickup','Ready in 2 hours',0,1,1);
INSERT INTO OrderDeliveryMethods (name,description,deliveryCost,status,deliveryMethId) VALUES ('USPS 2 day Delivery','Usually ships in 2 days',3.85,1,2);
INSERT INTO OrderDeliveryMethods (name,description,deliveryCost,status,deliveryMethId) VALUES ('Fedex 5 day Delivery','Usually ships in 2 days',1.85,1,3);
INSERT INTO OrderDeliveryMethods (name,description,deliveryCost,status,deliveryMethId) VALUES ('Not Active Delivery','Usually ships in 2 days',1.11,1,4);


##############################################################################################################################
##############################################################################################################################
                                                                                                                                
#
#
# OrderDiscounts table
# datecreated 10-11-2004
# FIELDS
# discountId 65535 maximum discount methods
# name 64 max characters Name of the server
# discountAmount 0 means that the discount will be determined depending on the situation
# discountPercentage 0 means that the discount will be determined depending on the situation
#
#
                             
DROP TABLE IF EXISTS OrderDiscounts;
CREATE TABLE OrderDiscounts (
  name varchar(64) NOT NULL default 'No Name Specified',
  description tinytext NOT NULL default'',
  discountAmount decimal(3,2) NOT NULL,
  discountPercentage decimal(3,2) NOT NULL,
  status bool default 1,
  discountId smallint unsigned NOT NULL auto_increment, 
  PRIMARY KEY (discountId),
  INDEX findByStat (status)
) TYPE=MyISAM AUTO_INCREMENT=1;

INSERT INTO OrderDiscounts (name,description,discountAmount,discountPercentage,status) VALUES ('Personal Discount','Discounts that are givento sell the product',0,0,1);
INSERT INTO OrderDiscounts (name,description,discountAmount,discountPercentage,status) VALUES ('Amount Discount','Discounts that are given to sell the product',2.00,0,1);
INSERT INTO OrderDiscounts (name,description,discountAmount,discountPercentage,status) VALUES ('Percentage Discount','Discounts that are given to sell the product',0,2.00,1);
INSERT INTO OrderDiscounts (name,description,discountAmount,discountPercentage,status) VALUES ('Both Discount','Discounts that are given to sell the product',2.00,3.00,1);
INSERT INTO OrderDiscounts (name,description,discountAmount,discountPercentage,status) VALUES ('Not active disco','Discounts that are given to sell the product',2.00,3.00,0);

##############################################################################################################################
############################################################################################################################## 

#
#
# OrderToDiscounts table
# datecreated 10-11-2004
# FIELDS
# orderId
# discountId 65535 maximum discount types
# discountAmount 
#
#

DROP TABLE IF EXISTS OrderToDiscounts;
CREATE TABLE OrderToDiscounts (
  orderId int unsigned NOT NULL,
  discountId  bigint unsigned NOT NULL,
  discountAmount decimal(8,2) NOT NULL default 0.00,
  INDEX findOrders(orderId),
  INDEX findDiscounts (discountId)
) TYPE=MYISAM;



##############################################################################################################################
##############################################################################################################################

#
#
# OrdersPaymentMethods table
# datecreated 08-17-04
# FIELDS
# paymentMethId 65535 maximum payment methods
# name 255 max characters Name of the server
# methodInitialCost any initial cost of taking that payment: some credit companies charge initial .25 dollar per order
# methodPercentageCost any percentage cost of taking that payment: Some credit companies charge 2% percent of product
# status 0 means not active 1 means active
#
                                                                                                                                                     
DROP TABLE IF EXISTS OrderPaymentMethods;
CREATE TABLE OrderPaymentMethods (
  name varchar(64) NOT NULL,
  classification varchar(32) NOT NULL,
  methodInitialCost decimal (8,2) NOT NULL default 0,
  methodPercentageCost decimal(3,2) NOT NULL default '00.00',
  status bool default 1,
  paymentMethId smallint unsigned NOT NULL auto_increment,
  PRIMARY KEY (paymentMethId),
  INDEX findByStat (status)	
) TYPE=MyISAM AUTO_INCREMENT=1;
                                                                                                                                                     
INSERT INTO OrderPaymentMethods (name,classification,methodInitialCost,methodPercentageCost,status) VALUES ('Cash','Cash',0,0,1);
INSERT INTO OrderPaymentMethods (name,classification,methodInitialCost,methodPercentageCost,status) VALUES ('Ez Gift Card','Gift Card',0,00.00,1);
INSERT INTO OrderPaymentMethods (name,classification,methodInitialCost,methodPercentageCost,status) VALUES ('Discover Card','Credit Card','0.15',0.02,1);
INSERT INTO OrderPaymentMethods (name,classification,methodInitialCost,methodPercentageCost,status) VALUES ('Yello Gift Card','Gift Card','0',00.00,1);
INSERT INTO OrderPaymentMethods (name,classification,methodInitialCost,methodPercentageCost,status) VALUES ('Not active card','Check','0',00.00,0);
INSERT INTO OrderPaymentMethods (name,classification,methodInitialCost,methodPercentageCost,status) VALUES ('Not active card','Gift Card','0',00.00,0);

##############################################################################################################################
##############################################################################################################################

#
# I have this table for the reason of having multiple payments per order
#

DROP TABLE IF EXISTS OrderToPayments;
CREATE TABLE OrderToPayments (
  orderId int unsigned NOT NULL,
  paymentId  bigint unsigned NOT NULL,
  paymentCost decimal(15,2) NOT NULL,
  INDEX findOrders(orderId),
  INDEX findPayments (paymentId)
) TYPE=MYISAM;


##############################################################################################################################
##############################################################################################################################
                                                                                                                                                             
DROP TABLE IF EXISTS Stores;
CREATE TABLE Stores (
  name varchar(64) NOT NULL,
  address tinytext NOT NULL,
  city tinytext NOT NULL,
  state varchar(2),
  zip varchar(16),
  telephone varchar(32),
  storeId smallint unsigned NOT NULL auto_increment,
  PRIMARY KEY (storeId),
  INDEX findByName (name)
) TYPE=MyISAM AUTO_INCREMENT=1;

INSERT INTO Stores (name,address,city,state,zip,telephone) VALUES ('default','200 University blvd','Denver','CO','80022','303-5129292');
#INSERT INTO Stores (name,address,city,state,zip,telephone) VALUES ('200 University blvd','Denver','CO','80022','');
##############################################################################################################################
##############################################################################################################################


#
#
# Users table
# datecreated 08-17-04
# FIELDS
# userId 256 maximum Users per restaurant's' payroll 
# name 255 max characters email address of the user
# address 255 max characters address of the server
# phoneNo 255 max characters phone number of the server
# contactPerson 255 max characters contact information of the server
#
# TODO: How to find efficiency of a server (order per server type of deal)
# Answer: Join Orders table and Users table with userId
#
#

DROP TABLE IF EXISTS Users;
CREATE TABLE Users (
  name varchar (64) NOT NULL,
  address tinytext,
  city tinytext,
  state varchar(2),
  zip varchar(16),
  telephone varchar(32),
  contactPerson tinytext,
  contactTelephone varchar(32),
  userId tinyint unsigned NOT NULL auto_increment,
  PRIMARY KEY (userId)
) TYPE=MyISAM AUTO_INCREMENT=1;

INSERT INTO Users (name,address,city,state,zip,telephone,contactPerson,contactTelephone) 
			 VALUES ('Hakan Zorlu','6371 E Ohio ave','Denver','CO','80224','(720) 524-4444','Rachel Ostraat','303-223-2322');
INSERT INTO Users (name,address,city,state,zip,telephone,contactPerson,contactTelephone)
			VALUES ('Umit Kaya','22 Adams st','Denver','CO','80220','(303) 388-8888','Elvan Kaya','303-223-2344');
INSERT INTO Users (name,address,city,state,zip,telephone,contactPerson,contactTelephone)
            VALUES ('Ismail Pilavki','Britannia Heights','Denver','CO','80120','(202) 398-7307','Muhlis','303-277-7744');


DROP TABLE IF EXISTS UsersLogin;
CREATE TABLE UsersLogin (
  username varchar (64) NOT NULL,
  password varchar(255) NOT NULL,
  userId tinyint unsigned NOT NULL,
  PRIMARY KEY (userId),
  INDEX finduser (username)
) TYPE=MyISAM;
                                                                                                                                                             
INSERT INTO UsersLogin (username,password,userId) VALUES ('zorlu',MD5('dude'),1);
INSERT INTO UsersLogin (username,password,userId) VALUES ('kaya',MD5('dude'),2);
INSERT INTO UsersLogin (username,password,userId) VALUES ('pilavki',MD5('dude'),3);


##############################################################################################################################
##############################################################################################################################


DROP TABLE IF EXISTS Admins;
CREATE TABLE Admins (
  name varchar (64) NOT NULL,
  address tinytext,
  city tinytext,
  state varchar(2),
  zip varchar(16),
  telephone varchar(32),
  contactPerson tinytext,
  contactTelephone varchar(32),
  adminId tinyint unsigned NOT NULL auto_increment,
  PRIMARY KEY (adminId)
) TYPE=MyISAM AUTO_INCREMENT=1;
                                                                                                                                                             
INSERT INTO Admins (name,address,city,state,zip,telephone,contactPerson,contactTelephone)
             VALUES ('Medora Ostraat','6371 E Ohio ave','Denver','CO','80224','303-223-2322','Hakan Zorlu','(720) 5244444');


DROP TABLE IF EXISTS AdminsLogin;
CREATE TABLE AdminsLogin (
	email varchar (64) NOT NULL,
	password varchar(255) NOT NULL,
    adminId tinyint unsigned NOT NULL,
	PRIMARY KEY (adminId),
	INDEX finduser (username)
) TYPE=MyISAM;
                                                                                                                                                             
INSERT INTO AdminsLogin (username,password,adminId) VALUES ('zorlu',MD5('dude'),1);

##############################################################################################################################
##############################################################################################################################
#
#
# ADODB Session management installation table
# referTo the link for more information:   http://phplens.com/lens/adodb/docs-session.htm 
#
#

DROP TABLE IF EXISTS sessions;
CREATE TABLE sessions (
	SESSKEY char(32) NOT NULL,
	EXPIRY int(11) unsigned NOT NULL,
	EXPIREREF varchar(64),
	DATA text NOT NULL,
	PRIMARY KEY (sesskey)
) TYPE=MyISAM;


##############################################################################################################################
##############################################################################################################################

#
#
# max 65535 different configuration/preferences variables.
# name name of the Preference
# value value of the preference
#
#

DROP TABLE IF EXISTS Preferences;
CREATE TABLE Preferences (
  name varchar(64) NOT NULL,
  description tinytext,
  value tinytext NOT NULL,
  PRIMARY KEY (name)
) TYPE=MyISAM;

INSERT INTO Preferences (name,description,value) VALUES ('Idle Time','The time (in seconds) before a user can stay Idle before They are required to Login again',300);
INSERT INTO Preferences (name,description,value) VALUES ('Signin Page','User get redirected to this page for Authentication','login.php');
INSERT INTO Preferences (name,description,value) VALUES ('Signout Page','User get redirected to this page When session is over','logout.php');

#INSERT INTO Preferences (name,description,value) VALUES ('Quick CheckOut Payment Type','Payment Type to Accept When Quick Checkout Button is Pressed', 'Credit Card');
#INSERT INTO Preferences (name,description,value) VALUES ('Quick CheckOut Discount Amount','Amount of discount given to the Customer, when Quick Checkout Button is Pressed','0.00');
##############################################################################################################################
##############################################################################################################################
